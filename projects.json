{
  "projects": [
    {
      "slug": "nononsensecooking",
      "name": "NoNonsense.cooking",
      "description": "A no-nonsense recipe website hosting my favorite easy-to-cook recipes.",
      "longDescription": "NoNonsense.cooking is a website hosting my favorite recipes. I needed a way to share recipes with friends and family and didn't like existing (German) sites, since they were usually bloated, looked outdated or had a huge amount of trackers. That's why I built NoNonsense.cooking. It's open source and anyone can contribute recipes on GitHub.",
      "image": {
        "filename": "nononsensecooking.png",
        "width": 1200,
        "height": 855
      },
      "links": [
        {
          "name": "NoNonsense.cooking",
          "variant": "primary",
          "url": "https://nononsense.cooking?utm_source=riesinger.dev&utm_medium=projects"
        },
        {
          "name": "GitHub",
          "variant": "secondary",
          "url": "https://github.com/riesinger/nononsensecooking"
        }
      ],
      "stack": [
        "Next.JS",
        "TypeScript",
        "styled-components",
        "GitHub",
        "Vercel"
      ],
      "development": "NoNonsense.cooking was my first proper Next.JS project. I learned a lot about its inner workings and started to enjoy webapps with it a lot. It provides many useful things, such as server-side rendering, out of the box, which made creating NoNonsense.cooking quick and easy.\nCreating NoNonsense.cooking has also taught me the importance of backgrounds in photography. Make it to empty and the photo looks bland, add too many things and it looks crowded."
    },
    {
      "slug": "plausible-exporter",
      "name": "plausible-exporter",
      "description": "A Prometheus metrics exporter for Plausible analytics",
      "longDescription": "plausible-exporter is a metrics exporter for Prometheus, enabling you to visualize your website's vital metrics from Plausible analytics via Grafana. I wrote it since I use Plausible analytics on my websites, but haven't found a way to get an overview into Prometheus from it.",
      "links": [
        {
          "name": "GitHub",
          "variant": "primary",
          "url": "https://github.com/riesinger/plausible-exporter"
        }
      ],
      "stack": ["Go", "Docker"],
      "image": {
        "filename": "plausible-exporter.png",
        "width": 2868,
        "height": 786
      }
    },
    {
      "slug": "paper-tracker",
      "name": "Paper Tracker",
      "description": "A system for tracking the location and workflow of documents.",
      "longDescription": "Paper Tracker is a system for tracking the location and the workflows of a physical document. It is comprised of a hardware device locating the documents via WiFi positioning, an app for tracking their workflows and a server managing everything. This was a university project.",
      "image": {
        "filename": "paper-tracker.png",
        "width": 1200,
        "height": 655
      },
      "links": [
        {
          "name": "GitHub",
          "variant": "primary",
          "url": "https://github.com/glidingthroughspace/paper-tracker"
        }
      ],
      "stack": ["TinyPICO (ESP32)", "C++", "Go", "Flutter", "Dart", "Python"]
    },
    {
      "slug": "8051-connect-four",
      "name": "8051 Connect Four",
      "description": "Connect Four implemented on a 8051 microprocessor.",
      "longDescription": "8051 Connect Four is an implementation of the classic Connect Four game on an Intel 8051 microprocessor. It uses 8 buttons as inputs and an LED matrix as output. It features true 2 player mode with automatic winner detection and was completely implemented in assembly language. This was a university project.",
      "image": {
        "filename": "8051-connect-four.png",
        "width": 1200,
        "height": 855
      },
      "links": [
        {
          "name": "GitHub",
          "variant": "primary",
          "url": "https://github.com/riesinger/8051-gewinnt"
        }
      ],
      "stack": ["8051 microprocessor", "MCU 8051 IDE", "Assembly language"]
    }
  ]
}
